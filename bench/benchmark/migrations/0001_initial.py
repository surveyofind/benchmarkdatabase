# Generated by Django 5.0.4 on 2024-07-15 09:28

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='gcpdata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyid', models.CharField(blank=True, max_length=200, null=True)),
                ('gcp_name', models.CharField(blank=True, max_length=200, null=True)),
                ('pamphlet_no', models.CharField(blank=True, max_length=200, null=True)),
                ('state', models.CharField(blank=True, max_length=200, null=True)),
                ('district', models.CharField(blank=True, max_length=200, null=True)),
                ('tahsil', models.CharField(blank=True, max_length=200, null=True)),
                ('pincode', models.CharField(blank=True, max_length=200, null=True)),
                ('longitude', models.CharField(blank=True, max_length=200, null=True)),
                ('latitude', models.CharField(blank=True, max_length=200, null=True)),
                ('ellipsoidheight', models.CharField(blank=True, max_length=200, null=True)),
                ('orthometrichight', models.CharField(blank=True, max_length=200, null=True)),
                ('gravityvalue', models.CharField(blank=True, max_length=200, null=True)),
                ('gcp_on_pillar', models.CharField(blank=True, max_length=500, null=True)),
                ('old_description', models.TextField(blank=True, null=True)),
                ('revised_description', models.TextField(blank=True, null=True)),
                ('conduction_of_gcp', models.CharField(blank=True, max_length=500, null=True)),
                ('image_east', models.ImageField(blank=True, null=True, upload_to='image/')),
                ('image_west', models.ImageField(blank=True, null=True, upload_to='image/')),
                ('image_north', models.ImageField(blank=True, null=True, upload_to='image/')),
                ('image_south', models.ImageField(blank=True, null=True, upload_to='image/')),
                ('authorised_person_name_and_designation', models.CharField(blank=True, max_length=500, null=True)),
                ('authorised_person_contactno', models.CharField(blank=True, max_length=500, null=True)),
                ('last_date_of_vist', models.CharField(blank=True, max_length=500, null=True)),
                ('inspection_remark', models.CharField(blank=True, max_length=500, null=True)),
                ('updatetime', models.CharField(blank=True, max_length=500, null=True)),
                ('gdc_username', models.TextField(blank=True, null=True)),
                ('pid', models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='gtstation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyid', models.CharField(blank=True, max_length=200, null=True)),
                ('gtstation_name', models.CharField(blank=True, max_length=200, null=True)),
                ('pamphlet_no', models.CharField(blank=True, max_length=200, null=True)),
                ('state', models.CharField(blank=True, max_length=200, null=True)),
                ('ellipsoidheight', models.CharField(blank=True, max_length=200, null=True)),
                ('triangulatedheight', models.CharField(blank=True, max_length=200, null=True)),
                ('orthometrichight', models.CharField(blank=True, max_length=200, null=True)),
                ('gravityvalue', models.CharField(blank=True, max_length=200, null=True)),
                ('district', models.CharField(blank=True, max_length=200, null=True)),
                ('tahsil', models.CharField(blank=True, max_length=200, null=True)),
                ('pincode', models.CharField(blank=True, max_length=200, null=True)),
                ('longitude', models.CharField(blank=True, max_length=200, null=True)),
                ('latitude', models.CharField(blank=True, max_length=200, null=True)),
                ('gt_station_inscription', models.CharField(blank=True, max_length=200, null=True)),
                ('old_description', models.TextField(blank=True, null=True)),
                ('revised_description', models.TextField(blank=True, null=True)),
                ('conduction_of_gtstation', models.CharField(blank=True, max_length=500, null=True)),
                ('image_east', models.ImageField(blank=True, null=True, upload_to='image/')),
                ('image_west', models.ImageField(blank=True, null=True, upload_to='image/')),
                ('image_north', models.ImageField(blank=True, null=True, upload_to='image/')),
                ('image_south', models.ImageField(blank=True, null=True, upload_to='image/')),
                ('authorised_person_name_and_designation', models.CharField(blank=True, max_length=500, null=True)),
                ('authorised_person_contactno', models.CharField(blank=True, max_length=500, null=True)),
                ('last_date_of_vist', models.CharField(blank=True, max_length=500, null=True)),
                ('inspection_remark', models.CharField(blank=True, max_length=500, null=True)),
                ('updatetime', models.CharField(blank=True, max_length=500, null=True)),
                ('gdc_username', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='sbmdata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyid', models.CharField(blank=True, max_length=200, null=True)),
                ('sbm_type', models.CharField(blank=True, max_length=200, null=True)),
                ('pamphlet_no', models.CharField(blank=True, max_length=200, null=True)),
                ('state', models.CharField(blank=True, max_length=200, null=True)),
                ('district', models.CharField(blank=True, max_length=200, null=True)),
                ('tahsil', models.CharField(blank=True, max_length=200, null=True)),
                ('pincode', models.CharField(blank=True, max_length=200, null=True)),
                ('longitude', models.CharField(blank=True, max_length=200, null=True)),
                ('latitude', models.CharField(blank=True, max_length=200, null=True)),
                ('sbm_inscription', models.CharField(blank=True, max_length=500, null=True)),
                ('old_description', models.CharField(blank=True, max_length=500, null=True)),
                ('revised_description', models.CharField(blank=True, max_length=500, null=True)),
                ('conduction_of_sbm', models.CharField(blank=True, max_length=500, null=True)),
                ('conduction_of_reference_pillar', models.CharField(blank=True, max_length=500, null=True)),
                ('image_east', models.ImageField(blank=True, null=True, upload_to='image/')),
                ('image_west', models.ImageField(blank=True, null=True, upload_to='image/')),
                ('image_north', models.ImageField(blank=True, null=True, upload_to='image/')),
                ('image_south', models.ImageField(blank=True, null=True, upload_to='image/')),
                ('authorised_person_name_and_designation', models.CharField(blank=True, max_length=500, null=True)),
                ('authorised_person_contactno', models.CharField(blank=True, max_length=500, null=True)),
                ('last_date_of_vist', models.CharField(blank=True, max_length=500, null=True)),
                ('inspection_remark', models.CharField(blank=True, max_length=500, null=True)),
                ('updatetime', models.CharField(blank=True, max_length=500, null=True)),
                ('gdc_username', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('gdc', models.BooleanField(default=False, verbose_name='gdc')),
                ('cors', models.BooleanField(default=False, verbose_name='sbm')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
